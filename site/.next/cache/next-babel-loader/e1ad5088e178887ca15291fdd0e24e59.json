{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yonggu/WebstormProjects/slate/site/examples/markdown-shortcuts.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { Editor, Transforms, Range, Point, createEditor } from 'slate';\nimport { withHistory } from 'slate-history';\nvar SHORTCUTS = {\n  '*': 'list-item',\n  '-': 'list-item',\n  '+': 'list-item',\n  '>': 'block-quote',\n  '#': 'heading-one',\n  '##': 'heading-two',\n  '###': 'heading-three',\n  '####': 'heading-four',\n  '#####': 'heading-five',\n  '######': 'heading-six'\n};\nvar odelete = Transforms[\"delete\"];\n\nTransforms[\"delete\"] = function (editor, options) {\n  console.log(\"Transforms.delete unit\", options.unit, \"at\", options.at);\n  odelete(editor, options);\n};\n\nvar MarkdownShortcutsExample = function MarkdownShortcutsExample() {\n  _s();\n\n  var _useState = useState(initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var renderElement = useCallback(function (props) {\n    return __jsx(Element, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 46\n      }\n    }));\n  }, []);\n  var editor = useMemo(function () {\n    return withShortcuts(withReact(withHistory(createEditor())));\n  }, []);\n  return __jsx(Slate, {\n    editor: editor,\n    value: value,\n    onChange: function onChange(value) {\n      return setValue(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Editable, {\n    renderElement: renderElement,\n    placeholder: \"Write some markdown...\",\n    spellCheck: true,\n    autoFocus: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(MarkdownShortcutsExample, \"9HkvqXgepfcc58pVdFmOn6blq7U=\");\n\n_c = MarkdownShortcutsExample;\n\nvar withShortcuts = function withShortcuts(editor) {\n  var deleteBackward = editor.deleteBackward,\n      insertText = editor.insertText;\n\n  editor.insertText = function (text) {\n    var selection = editor.selection;\n\n    if (text === ' ' && selection && Range.isCollapsed(selection)) {\n      var anchor = selection.anchor;\n      var block = Editor.above(editor, {\n        match: function match(n) {\n          return Editor.isBlock(editor, n);\n        }\n      });\n      var path = block ? block[1] : [];\n      var start = Editor.start(editor, path);\n      var range = {\n        anchor: anchor,\n        focus: start\n      };\n      var beforeText = Editor.string(editor, range);\n      var type = SHORTCUTS[beforeText];\n\n      if (type) {\n        Transforms.select(editor, range);\n        Transforms[\"delete\"](editor);\n        Transforms.setNodes(editor, {\n          type: type\n        }, {\n          match: function match(n) {\n            return Editor.isBlock(editor, n);\n          }\n        });\n\n        if (type === 'list-item') {\n          var list = {\n            type: 'bulleted-list',\n            children: []\n          };\n          Transforms.wrapNodes(editor, list, {\n            match: function match(n) {\n              return n.type === 'list-item';\n            }\n          });\n        }\n\n        return;\n      }\n    }\n\n    insertText(text);\n  };\n\n  editor.deleteBackward = function () {\n    var selection = editor.selection;\n\n    if (selection && Range.isCollapsed(selection)) {\n      var match = Editor.above(editor, {\n        match: function match(n) {\n          return Editor.isBlock(editor, n);\n        }\n      });\n\n      if (match) {\n        var _match = _slicedToArray(match, 2),\n            block = _match[0],\n            path = _match[1];\n\n        var start = Editor.start(editor, path);\n\n        if (block.type !== 'paragraph' && Point.equals(selection.anchor, start)) {\n          Transforms.setNodes(editor, {\n            type: 'paragraph'\n          });\n\n          if (block.type === 'list-item') {\n            Transforms.unwrapNodes(editor, {\n              match: function match(n) {\n                return n.type === 'bulleted-list';\n              },\n              split: true\n            });\n          }\n\n          return;\n        }\n      }\n\n      deleteBackward.apply(void 0, arguments);\n    }\n  };\n\n  return editor;\n};\n\nvar Element = function Element(_ref) {\n  var attributes = _ref.attributes,\n      children = _ref.children,\n      element = _ref.element;\n\n  switch (element.type) {\n    case 'block-quote':\n      return __jsx(\"blockquote\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 14\n        }\n      }), children);\n\n    case 'bulleted-list':\n      return __jsx(\"ul\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 14\n        }\n      }), children);\n\n    case 'heading-one':\n      return __jsx(\"h1\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 14\n        }\n      }), children);\n\n    case 'heading-two':\n      return __jsx(\"h2\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 14\n        }\n      }), children);\n\n    case 'heading-three':\n      return __jsx(\"h3\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 14\n        }\n      }), children);\n\n    case 'heading-four':\n      return __jsx(\"h4\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 14\n        }\n      }), children);\n\n    case 'heading-five':\n      return __jsx(\"h5\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 14\n        }\n      }), children);\n\n    case 'heading-six':\n      return __jsx(\"h6\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 14\n        }\n      }), children);\n\n    case 'list-item':\n      return __jsx(\"li\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 14\n        }\n      }), children);\n\n    default:\n      return __jsx(\"p\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 14\n        }\n      }), children);\n  }\n};\n\n_c2 = Element;\nvar initialValue = [{\n  type: 'paragraph',\n  children: [{\n    text: 'The editor gives you full control over the logic you can add. For example, it\\'s fairly common to want to add markdown-like shortcuts to editors. So that, when you start a line with \"> \" you get a blockquote that looks like this:'\n  }]\n}, {\n  type: 'block-quote',\n  children: [{\n    text: 'A wise quote.'\n  }]\n}, {\n  type: 'paragraph',\n  children: [{\n    text: 'Order when you start a line with \"## \" you get a level-two heading, like this:'\n  }]\n}, {\n  type: 'heading-two',\n  children: [{\n    text: 'Try it out!'\n  }]\n}, {\n  type: 'paragraph',\n  children: [{\n    text: 'Try it out for yourself! Try starting a new line with \">\", \"-\", or \"#\"s.'\n  }]\n}];\nexport default MarkdownShortcutsExample;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MarkdownShortcutsExample\");\n$RefreshReg$(_c2, \"Element\");","map":{"version":3,"sources":["/Users/yonggu/WebstormProjects/slate/site/examples/markdown-shortcuts.tsx"],"names":["React","useState","useCallback","useMemo","Slate","Editable","withReact","Editor","Transforms","Range","Point","createEditor","withHistory","SHORTCUTS","odelete","editor","options","console","log","unit","at","MarkdownShortcutsExample","initialValue","value","setValue","renderElement","props","withShortcuts","deleteBackward","insertText","text","selection","isCollapsed","anchor","block","above","match","n","isBlock","path","start","range","focus","beforeText","string","type","select","setNodes","list","children","wrapNodes","equals","unwrapNodes","split","Element","attributes","element"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,aAA3C;AACA,SAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,YAAjD,QAAqE,OAArE;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,IAAMC,SAAS,GAAG;AAChB,OAAK,WADW;AAEhB,OAAK,WAFW;AAGhB,OAAK,WAHW;AAIhB,OAAK,aAJW;AAKhB,OAAK,aALW;AAMhB,QAAM,aANU;AAOhB,SAAO,eAPS;AAQhB,UAAQ,cARQ;AAShB,WAAS,cATO;AAUhB,YAAU;AAVM,CAAlB;IAYYC,O,GAAWN,U;;AACvBA,UAAU,UAAV,GAAoB,UAACO,MAAD,EAAQC,OAAR,EAAkB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,OAAO,CAACG,IAA9C,EAAoD,IAApD,EAA0DH,OAAO,CAACI,EAAlE;AACAN,EAAAA,OAAO,CAACC,MAAD,EAAQC,OAAR,CAAP;AACD,CAHD;;AAIA,IAAMK,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AAAA;;AAAA,kBACXpB,QAAQ,CAASqB,YAAT,CADG;AAAA,MAC9BC,KAD8B;AAAA,MACvBC,QADuB;;AAErC,MAAMC,aAAa,GAAGvB,WAAW,CAAC,UAAAwB,KAAK;AAAA,WAAI,MAAC,OAAD,eAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA,GAAN,EAAkC,EAAlC,CAAjC;AACA,MAAMX,MAAM,GAAGZ,OAAO,CACpB;AAAA,WAAMwB,aAAa,CAACrB,SAAS,CAACM,WAAW,CAACD,YAAY,EAAb,CAAZ,CAAV,CAAnB;AAAA,GADoB,EAEpB,EAFoB,CAAtB;AAIA,SACE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEI,MAAf;AAAuB,IAAA,KAAK,EAAEQ,KAA9B;AAAqC,IAAA,QAAQ,EAAE,kBAAAA,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,aAAa,EAAEE,aADjB;AAEE,IAAA,WAAW,EAAC,wBAFd;AAGE,IAAA,UAAU,MAHZ;AAIE,IAAA,SAAS,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAjBD;;GAAMJ,wB;;KAAAA,wB;;AAmBN,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAAAZ,MAAM,EAAI;AAAA,MACtBa,cADsB,GACSb,MADT,CACtBa,cADsB;AAAA,MACNC,UADM,GACSd,MADT,CACNc,UADM;;AAG9Bd,EAAAA,MAAM,CAACc,UAAP,GAAoB,UAAAC,IAAI,EAAI;AAAA,QAClBC,SADkB,GACJhB,MADI,CAClBgB,SADkB;;AAG1B,QAAID,IAAI,KAAK,GAAT,IAAgBC,SAAhB,IAA6BtB,KAAK,CAACuB,WAAN,CAAkBD,SAAlB,CAAjC,EAA+D;AAAA,UACrDE,MADqD,GAC1CF,SAD0C,CACrDE,MADqD;AAE7D,UAAMC,KAAK,GAAG3B,MAAM,CAAC4B,KAAP,CAAapB,MAAb,EAAqB;AACjCqB,QAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,iBAAI9B,MAAM,CAAC+B,OAAP,CAAevB,MAAf,EAAuBsB,CAAvB,CAAJ;AAAA;AADyB,OAArB,CAAd;AAGA,UAAME,IAAI,GAAGL,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc,EAAhC;AACA,UAAMM,KAAK,GAAGjC,MAAM,CAACiC,KAAP,CAAazB,MAAb,EAAqBwB,IAArB,CAAd;AACA,UAAME,KAAK,GAAG;AAAER,QAAAA,MAAM,EAANA,MAAF;AAAUS,QAAAA,KAAK,EAAEF;AAAjB,OAAd;AACA,UAAMG,UAAU,GAAGpC,MAAM,CAACqC,MAAP,CAAc7B,MAAd,EAAsB0B,KAAtB,CAAnB;AACA,UAAMI,IAAI,GAAGhC,SAAS,CAAC8B,UAAD,CAAtB;;AAEA,UAAIE,IAAJ,EAAU;AACRrC,QAAAA,UAAU,CAACsC,MAAX,CAAkB/B,MAAlB,EAA0B0B,KAA1B;AACAjC,QAAAA,UAAU,UAAV,CAAkBO,MAAlB;AACAP,QAAAA,UAAU,CAACuC,QAAX,CACEhC,MADF,EAEE;AAAE8B,UAAAA,IAAI,EAAJA;AAAF,SAFF,EAGE;AAAET,UAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,mBAAI9B,MAAM,CAAC+B,OAAP,CAAevB,MAAf,EAAuBsB,CAAvB,CAAJ;AAAA;AAAV,SAHF;;AAMA,YAAIQ,IAAI,KAAK,WAAb,EAA0B;AACxB,cAAMG,IAAI,GAAG;AAAEH,YAAAA,IAAI,EAAE,eAAR;AAAyBI,YAAAA,QAAQ,EAAE;AAAnC,WAAb;AACAzC,UAAAA,UAAU,CAAC0C,SAAX,CAAqBnC,MAArB,EAA6BiC,IAA7B,EAAmC;AACjCZ,YAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACQ,IAAF,KAAW,WAAf;AAAA;AADyB,WAAnC;AAGD;;AAED;AACD;AACF;;AAEDhB,IAAAA,UAAU,CAACC,IAAD,CAAV;AACD,GAnCD;;AAqCAf,EAAAA,MAAM,CAACa,cAAP,GAAwB,YAAa;AAAA,QAC3BG,SAD2B,GACbhB,MADa,CAC3BgB,SAD2B;;AAGnC,QAAIA,SAAS,IAAItB,KAAK,CAACuB,WAAN,CAAkBD,SAAlB,CAAjB,EAA+C;AAC7C,UAAMK,KAAK,GAAG7B,MAAM,CAAC4B,KAAP,CAAapB,MAAb,EAAqB;AACjCqB,QAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,iBAAI9B,MAAM,CAAC+B,OAAP,CAAevB,MAAf,EAAuBsB,CAAvB,CAAJ;AAAA;AADyB,OAArB,CAAd;;AAIA,UAAID,KAAJ,EAAW;AAAA,oCACaA,KADb;AAAA,YACFF,KADE;AAAA,YACKK,IADL;;AAET,YAAMC,KAAK,GAAGjC,MAAM,CAACiC,KAAP,CAAazB,MAAb,EAAqBwB,IAArB,CAAd;;AAEA,YACEL,KAAK,CAACW,IAAN,KAAe,WAAf,IACAnC,KAAK,CAACyC,MAAN,CAAapB,SAAS,CAACE,MAAvB,EAA+BO,KAA/B,CAFF,EAGE;AACAhC,UAAAA,UAAU,CAACuC,QAAX,CAAoBhC,MAApB,EAA4B;AAAE8B,YAAAA,IAAI,EAAE;AAAR,WAA5B;;AAEA,cAAIX,KAAK,CAACW,IAAN,KAAe,WAAnB,EAAgC;AAC9BrC,YAAAA,UAAU,CAAC4C,WAAX,CAAuBrC,MAAvB,EAA+B;AAC7BqB,cAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACQ,IAAF,KAAW,eAAf;AAAA,eADqB;AAE7BQ,cAAAA,KAAK,EAAE;AAFsB,aAA/B;AAID;;AAED;AACD;AACF;;AAEDzB,MAAAA,cAAc,MAAd;AACD;AACF,GA/BD;;AAiCA,SAAOb,MAAP;AACD,CA1ED;;AA4EA,IAAMuC,OAAO,GAAG,SAAVA,OAAU,OAAuC;AAAA,MAApCC,UAAoC,QAApCA,UAAoC;AAAA,MAAxBN,QAAwB,QAAxBA,QAAwB;AAAA,MAAdO,OAAc,QAAdA,OAAc;;AACrD,UAAQA,OAAO,CAACX,IAAhB;AACE,SAAK,aAAL;AACE,aAAO,iCAAgBU,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BN,QAA7B,CAAP;;AACF,SAAK,eAAL;AACE,aAAO,yBAAQM,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBN,QAArB,CAAP;;AACF,SAAK,aAAL;AACE,aAAO,yBAAQM,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBN,QAArB,CAAP;;AACF,SAAK,aAAL;AACE,aAAO,yBAAQM,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBN,QAArB,CAAP;;AACF,SAAK,eAAL;AACE,aAAO,yBAAQM,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBN,QAArB,CAAP;;AACF,SAAK,cAAL;AACE,aAAO,yBAAQM,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBN,QAArB,CAAP;;AACF,SAAK,cAAL;AACE,aAAO,yBAAQM,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBN,QAArB,CAAP;;AACF,SAAK,aAAL;AACE,aAAO,yBAAQM,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBN,QAArB,CAAP;;AACF,SAAK,WAAL;AACE,aAAO,yBAAQM,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBN,QAArB,CAAP;;AACF;AACE,aAAO,wBAAOM,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBN,QAApB,CAAP;AApBJ;AAsBD,CAvBD;;MAAMK,O;AAyBN,IAAMhC,YAAY,GAAG,CACnB;AACEuB,EAAAA,IAAI,EAAE,WADR;AAEEI,EAAAA,QAAQ,EAAE,CACR;AACEnB,IAAAA,IAAI,EACF;AAFJ,GADQ;AAFZ,CADmB,EAUnB;AACEe,EAAAA,IAAI,EAAE,aADR;AAEEI,EAAAA,QAAQ,EAAE,CAAC;AAAEnB,IAAAA,IAAI,EAAE;AAAR,GAAD;AAFZ,CAVmB,EAcnB;AACEe,EAAAA,IAAI,EAAE,WADR;AAEEI,EAAAA,QAAQ,EAAE,CACR;AACEnB,IAAAA,IAAI,EACF;AAFJ,GADQ;AAFZ,CAdmB,EAuBnB;AACEe,EAAAA,IAAI,EAAE,aADR;AAEEI,EAAAA,QAAQ,EAAE,CAAC;AAAEnB,IAAAA,IAAI,EAAE;AAAR,GAAD;AAFZ,CAvBmB,EA2BnB;AACEe,EAAAA,IAAI,EAAE,WADR;AAEEI,EAAAA,QAAQ,EAAE,CACR;AACEnB,IAAAA,IAAI,EACF;AAFJ,GADQ;AAFZ,CA3BmB,CAArB;AAsCA,eAAeT,wBAAf","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react'\nimport { Slate, Editable, withReact } from 'slate-react'\nimport { Node, Editor, Transforms, Range, Point, createEditor } from 'slate'\nimport { withHistory } from 'slate-history'\n\nconst SHORTCUTS = {\n  '*': 'list-item',\n  '-': 'list-item',\n  '+': 'list-item',\n  '>': 'block-quote',\n  '#': 'heading-one',\n  '##': 'heading-two',\n  '###': 'heading-three',\n  '####': 'heading-four',\n  '#####': 'heading-five',\n  '######': 'heading-six',\n}\nlet {delete:odelete} = Transforms\nTransforms.delete = (editor,options)=>{\n  console.log(\"Transforms.delete unit\", options.unit, \"at\", options.at)\n  odelete(editor,options)\n}\nconst MarkdownShortcutsExample = () => {\n  const [value, setValue] = useState<Node[]>(initialValue)\n  const renderElement = useCallback(props => <Element {...props} />, [])\n  const editor = useMemo(\n    () => withShortcuts(withReact(withHistory(createEditor()))),\n    []\n  )\n  return (\n    <Slate editor={editor} value={value} onChange={value => setValue(value)}>\n      <Editable\n        renderElement={renderElement}\n        placeholder=\"Write some markdown...\"\n        spellCheck\n        autoFocus\n      />\n    </Slate>\n  )\n}\n\nconst withShortcuts = editor => {\n  const { deleteBackward, insertText } = editor\n\n  editor.insertText = text => {\n    const { selection } = editor\n\n    if (text === ' ' && selection && Range.isCollapsed(selection)) {\n      const { anchor } = selection\n      const block = Editor.above(editor, {\n        match: n => Editor.isBlock(editor, n),\n      })\n      const path = block ? block[1] : []\n      const start = Editor.start(editor, path)\n      const range = { anchor, focus: start }\n      const beforeText = Editor.string(editor, range)\n      const type = SHORTCUTS[beforeText]\n\n      if (type) {\n        Transforms.select(editor, range)\n        Transforms.delete(editor)\n        Transforms.setNodes(\n          editor,\n          { type },\n          { match: n => Editor.isBlock(editor, n) }\n        )\n\n        if (type === 'list-item') {\n          const list = { type: 'bulleted-list', children: [] }\n          Transforms.wrapNodes(editor, list, {\n            match: n => n.type === 'list-item',\n          })\n        }\n\n        return\n      }\n    }\n\n    insertText(text)\n  }\n\n  editor.deleteBackward = (...args) => {\n    const { selection } = editor\n\n    if (selection && Range.isCollapsed(selection)) {\n      const match = Editor.above(editor, {\n        match: n => Editor.isBlock(editor, n),\n      })\n\n      if (match) {\n        const [block, path] = match\n        const start = Editor.start(editor, path)\n\n        if (\n          block.type !== 'paragraph' &&\n          Point.equals(selection.anchor, start)\n        ) {\n          Transforms.setNodes(editor, { type: 'paragraph' })\n\n          if (block.type === 'list-item') {\n            Transforms.unwrapNodes(editor, {\n              match: n => n.type === 'bulleted-list',\n              split: true,\n            })\n          }\n\n          return\n        }\n      }\n\n      deleteBackward(...args)\n    }\n  }\n\n  return editor\n}\n\nconst Element = ({ attributes, children, element }) => {\n  switch (element.type) {\n    case 'block-quote':\n      return <blockquote {...attributes}>{children}</blockquote>\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>\n    case 'heading-one':\n      return <h1 {...attributes}>{children}</h1>\n    case 'heading-two':\n      return <h2 {...attributes}>{children}</h2>\n    case 'heading-three':\n      return <h3 {...attributes}>{children}</h3>\n    case 'heading-four':\n      return <h4 {...attributes}>{children}</h4>\n    case 'heading-five':\n      return <h5 {...attributes}>{children}</h5>\n    case 'heading-six':\n      return <h6 {...attributes}>{children}</h6>\n    case 'list-item':\n      return <li {...attributes}>{children}</li>\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst initialValue = [\n  {\n    type: 'paragraph',\n    children: [\n      {\n        text:\n          'The editor gives you full control over the logic you can add. For example, it\\'s fairly common to want to add markdown-like shortcuts to editors. So that, when you start a line with \"> \" you get a blockquote that looks like this:',\n      },\n    ],\n  },\n  {\n    type: 'block-quote',\n    children: [{ text: 'A wise quote.' }],\n  },\n  {\n    type: 'paragraph',\n    children: [\n      {\n        text:\n          'Order when you start a line with \"## \" you get a level-two heading, like this:',\n      },\n    ],\n  },\n  {\n    type: 'heading-two',\n    children: [{ text: 'Try it out!' }],\n  },\n  {\n    type: 'paragraph',\n    children: [\n      {\n        text:\n          'Try it out for yourself! Try starting a new line with \">\", \"-\", or \"#\"s.',\n      },\n    ],\n  },\n]\n\nexport default MarkdownShortcutsExample\n"]},"metadata":{},"sourceType":"module"}