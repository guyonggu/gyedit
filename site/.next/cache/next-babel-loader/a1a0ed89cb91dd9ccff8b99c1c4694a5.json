{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n        font-weight: \", \";\\n        background-color: \", \";\\n      \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n              padding-left: 2em;\\n              width: 100%;\\n            \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n              position: absolute;\\n              top: 0.5em;\\n              left: 0.5em;\\n              color: #ccc;\\n            \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            position: relative;\\n          \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { Text, createEditor } from 'slate';\nimport { css } from 'emotion';\nimport { withHistory } from 'slate-history';\nimport { Icon, Toolbar } from '../components';\n\nvar SearchHighlightingExample = function SearchHighlightingExample() {\n  var _useState = useState(initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var editor = useMemo(function () {\n    return withHistory(withReact(createEditor()));\n  }, []);\n  var decorate = useCallback(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        node = _ref2[0],\n        path = _ref2[1];\n\n    var ranges = [];\n\n    if (search && Text.isText(node)) {\n      var text = node.text;\n      var parts = text.split(search);\n      var offset = 0;\n      parts.forEach(function (part, i) {\n        if (i !== 0) {\n          ranges.push({\n            anchor: {\n              path: path,\n              offset: offset - search.length\n            },\n            focus: {\n              path: path,\n              offset: offset\n            },\n            highlight: true\n          });\n        }\n\n        offset = offset + part.length + search.length;\n      });\n    }\n\n    return ranges;\n  }, [search]);\n  return __jsx(Slate, {\n    editor: editor,\n    value: value,\n    onChange: function onChange(value) {\n      return setValue(value);\n    }\n  }, __jsx(Toolbar, null, __jsx(\"div\", {\n    className: css(_templateObject())\n  }, __jsx(Icon, {\n    className: css(_templateObject2())\n  }, \"search\"), __jsx(\"input\", {\n    type: \"search\",\n    placeholder: \"Search the text...\",\n    onChange: function onChange(e) {\n      return setSearch(e.target.value);\n    },\n    className: css(_templateObject3())\n  }))), __jsx(Editable, {\n    decorate: decorate,\n    renderLeaf: function renderLeaf(props) {\n      return __jsx(Leaf, props);\n    }\n  }));\n};\n\nvar Leaf = function Leaf(_ref3) {\n  var attributes = _ref3.attributes,\n      children = _ref3.children,\n      leaf = _ref3.leaf;\n  return __jsx(\"span\", _extends({}, attributes, {\n    className: css(_templateObject4(), leaf.bold && 'bold', leaf.highlight && '#ffeeba')\n  }), children);\n};\n\nvar initialValue = [{\n  children: [{\n    text: 'This is editable text that you can search. As you search, it looks for matching strings of text, and adds '\n  }, {\n    text: 'decorations',\n    bold: true\n  }, {\n    text: ' to them in realtime.'\n  }]\n}, {\n  children: [{\n    text: 'Try it out for yourself by typing in the search box above!'\n  }]\n}];\nexport default SearchHighlightingExample;","map":null,"metadata":{},"sourceType":"module"}