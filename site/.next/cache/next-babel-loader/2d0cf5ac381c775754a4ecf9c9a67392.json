{"ast":null,"code":"import { Editor, Range, Path, Transforms } from 'slate';\nimport { fixList } from \"./util\";\nexport var onKeyDown = function onKeyDown() {\n  return function (e, editor) {\n    var selection = editor.selection;\n    if (!selection) return;\n\n    if (e.key === 'Tab') {\n      var entry = Editor.above(editor, {\n        match: function match(n) {\n          return Editor.isBlock(editor, n);\n        }\n      });\n\n      if (!entry) {\n        return;\n      }\n\n      e.preventDefault();\n\n      if (entry[0].type == 'list-item') {\n        if (Range.isCollapsed(selection)) {\n          var path = entry[1];\n          var start = Editor.start(editor, path);\n          var range = {\n            anchor: selection.anchor,\n            focus: start\n          };\n          var beforeText = Editor.string(editor, range);\n\n          if (beforeText.length) {\n            Editor.insertText(editor, '\\t');\n            return;\n          }\n        } // // move down with tab\n        // const tab = !e.shiftKey;\n        // if (tab) {\n\n\n        moveListItemDown(editor, entry[1]);\n        fixList(editor); // }\n      } else {\n        var p = selection.anchor;\n\n        if (Range.isExpanded(selection)) {\n          p = Editor.start(editor, p.path);\n        }\n\n        var ref = Editor.rangeRef(editor, selection);\n        Transforms.select(editor, p);\n        Editor.insertText(editor, '\\t');\n        Transforms.select(editor, ref.unref());\n      } // Editor.insertText(editor,'\\t')\n\n    }\n  };\n};\nfucntion;\n\nfunction moveListItemDown(editor, path) {\n  var entry = Editor.parent(editor, path);\n  var node = entry[0];\n\n  if (!node.type.endsWith('-list')) {\n    throw new Error(\"moveListItemDown, not a list at: \".concat(entry[1]));\n  }\n\n  var ref = Editor.pathRef(editor, path);\n  var pre = Editor.previous(editor, {\n    at: path\n  });\n  var next = Editor.next(editor, {\n    at: path\n  });\n\n  if (pre) {\n    Transforms.splitNodes(editor, {\n      at: path\n    });\n  }\n\n  if (next) {\n    Transforms.splitNodes(editor, {\n      at: Path.next(ref.current)\n    });\n  }\n\n  path = ref.unref();\n  var indent = node.indent ? node.indent + 1 : 1;\n  Transforms.setNodes(editor, {\n    indent: indent\n  }, {\n    at: Path.parent(path)\n  });\n}","map":{"version":3,"sources":["/Users/yonggu/WebstormProjects/gyedit/src/onKeyDown.ts"],"names":["Editor","Range","Path","Transforms","fixList","onKeyDown","e","editor","selection","key","entry","above","match","n","isBlock","preventDefault","type","isCollapsed","path","start","range","anchor","focus","beforeText","string","length","insertText","moveListItemDown","p","isExpanded","ref","rangeRef","select","unref","fucntion","parent","node","endsWith","Error","pathRef","pre","previous","at","next","splitNodes","current","indent","setNodes"],"mappings":"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","sourcesContent":["import {Editor, Range, Path, Location, Transforms} from 'slate'\nimport {ListNode} from './types'\nimport {fixList} from \"./util\";\n\n\nexport const onKeyDown = () => (\n    e: React.KeyboardEvent<HTMLDivElement>,\n    editor: Editor\n) => {\n    let {selection} = editor\n    if (!selection) return\n    if (e.key === 'Tab') {\n        const entry = Editor.above(editor, {\n            match: n => Editor.isBlock(editor, n),\n        })\n        if (!entry) {\n            return\n        }\n        e.preventDefault()\n        if (entry[0].type == 'list-item') {\n            if (Range.isCollapsed(selection)) {\n                const path = entry[1]\n                const start = Editor.start(editor, path)\n                const range = {anchor: selection.anchor, focus: start}\n                let beforeText = Editor.string(editor, range)\n                if (beforeText.length) {\n                    Editor.insertText(editor, '\\t')\n                    return\n                }\n            }\n            // // move down with tab\n            // const tab = !e.shiftKey;\n            // if (tab) {\n            moveListItemDown(editor, entry[1]);\n            fixList(editor)\n            // }\n        } else {\n            let p: Location = selection.anchor\n            if (Range.isExpanded(selection)) {\n                p = Editor.start(editor, p.path)\n            }\n            const ref = Editor.rangeRef(editor, selection)\n            Transforms.select(editor, p)\n            Editor.insertText(editor, '\\t')\n            Transforms.select(editor, ref.unref()!)\n        }\n        // Editor.insertText(editor,'\\t')\n    }\n};\nfucntion \nfunction moveListItemDown(editor: Editor, path: Path) {\n    let entry = Editor.parent(editor, path) as [ListNode, Path]\n    let node = entry[0]\n    if (!node.type.endsWith('-list')) {\n        throw new Error(`moveListItemDown, not a list at: ${entry[1]}`)\n    }\n    let ref = Editor.pathRef(editor, path)\n    let pre = Editor.previous(editor, {at: path})\n    let next = Editor.next(editor, {at: path})\n    if (pre) {\n        Transforms.splitNodes(editor, {at: path})\n    }\n    if (next) {\n        Transforms.splitNodes(editor, {at: Path.next(ref.current!)})\n    }\n    path = ref.unref()!\n    const indent = node.indent ? node.indent + 1 : 1\n    Transforms.setNodes(editor, {indent}, {at: Path.parent(path)})\n\n\n}"]},"metadata":{},"sourceType":"module"}