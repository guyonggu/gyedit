{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yonggu/WebstormProjects/gyedit/site/examples/images.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            display: block;\\n            max-width: 100%;\\n            max-height: 20em;\\n            box-shadow: \", \";\\n          \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useMemo } from 'react';\nimport imageExtensions from 'image-extensions';\nimport isUrl from 'is-url';\nimport { Transforms, createEditor } from 'slate';\nimport { Slate, Editable, useEditor, useSelected, useFocused, withReact } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { css } from 'emotion';\nimport { Button, Icon, Toolbar } from '../components';\n\nvar ImagesExample = function ImagesExample() {\n  _s();\n\n  var _useState = useState(initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var editor = useMemo(function () {\n    return withImages(withHistory(withReact(createEditor())));\n  }, []);\n  return __jsx(Slate, {\n    editor: editor,\n    value: value,\n    onChange: function onChange(value) {\n      return setValue(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Toolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(InsertImageButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), __jsx(Editable, {\n    renderElement: function renderElement(props) {\n      return __jsx(Element, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }\n      }));\n    },\n    placeholder: \"Enter some text...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ImagesExample, \"4ewp4wBHt4y6QUDh2ipfoCLaKxY=\");\n\n_c = ImagesExample;\n\nvar withImages = function withImages(editor) {\n  var insertData = editor.insertData,\n      isVoid = editor.isVoid;\n\n  editor.isVoid = function (element) {\n    return element.type === 'image' ? true : isVoid(element);\n  };\n\n  editor.insertData = function (data) {\n    var text = data.getData('text/plain');\n    var files = data.files;\n\n    if (files && files.length > 0) {\n      var _iterator = _createForOfIteratorHelper(files),\n          _step;\n\n      try {\n        var _loop = function _loop() {\n          var file = _step.value;\n          var reader = new FileReader();\n\n          var _file$type$split = file.type.split('/'),\n              _file$type$split2 = _slicedToArray(_file$type$split, 1),\n              mime = _file$type$split2[0];\n\n          if (mime === 'image') {\n            reader.addEventListener('load', function () {\n              var url = reader.result;\n              insertImage(editor, url);\n            });\n            reader.readAsDataURL(file);\n          }\n        };\n\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else if (isImageUrl(text)) {\n      insertImage(editor, text);\n    } else {\n      insertData(data);\n    }\n  };\n\n  return editor;\n};\n\nvar insertImage = function insertImage(editor, url) {\n  var text = {\n    text: ''\n  };\n  var image = {\n    type: 'image',\n    url: url,\n    children: [text]\n  };\n  Transforms.insertNodes(editor, image);\n};\n\nvar Element = function Element(props) {\n  var attributes = props.attributes,\n      children = props.children,\n      element = props.element;\n\n  switch (element.type) {\n    case 'image':\n      return __jsx(ImageElement, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 14\n        }\n      }));\n\n    default:\n      return __jsx(\"p\", _extends({}, attributes, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 14\n        }\n      }), children);\n  }\n};\n\n_c2 = Element;\n\nvar ImageElement = function ImageElement(_ref) {\n  _s2();\n\n  var attributes = _ref.attributes,\n      children = _ref.children,\n      element = _ref.element;\n  var selected = useSelected();\n  var focused = useFocused();\n  return __jsx(\"div\", _extends({}, attributes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    contentEditable: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: element.url,\n    className: css(_templateObject(), selected && focused ? '0 0 0 3px #B4D5FF' : 'none'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), children);\n};\n\n_s2(ImageElement, \"HuPpo5U0EHtf6bNXFVpc3GQNhHc=\", false, function () {\n  return [useSelected, useFocused];\n});\n\n_c3 = ImageElement;\n\nvar InsertImageButton = function InsertImageButton() {\n  _s3();\n\n  var editor = useEditor();\n  return __jsx(Button, {\n    onMouseDown: function onMouseDown(event) {\n      event.preventDefault();\n      var url = window.prompt('Enter the URL of the image:');\n      if (!url) return;\n      insertImage(editor, url);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"image\"));\n};\n\n_s3(InsertImageButton, \"t0rsU/t1p+LiVrRpHUSgNnV9Lz4=\", false, function () {\n  return [useEditor];\n});\n\n_c4 = InsertImageButton;\n\nvar isImageUrl = function isImageUrl(url) {\n  if (!url) return false;\n  if (!isUrl(url)) return false;\n  var ext = new URL(url).pathname.split('.').pop();\n  return imageExtensions.includes(ext);\n};\n\nvar initialValue = [{\n  type: 'paragraph',\n  children: [{\n    text: 'In addition to nodes that contain editable text, you can also create other types of nodes, like images or videos.'\n  }]\n}, {\n  type: 'image',\n  url: 'https://source.unsplash.com/kFrdX5IeQzI',\n  children: [{\n    text: ''\n  }]\n}, {\n  type: 'paragraph',\n  children: [{\n    text: 'This example shows images in action. It features two ways to add images. You can either add an image via the toolbar icon above, or if you want in on a little secret, copy an image URL to your keyboard and paste it anywhere in the editor!'\n  }]\n}];\nexport default ImagesExample;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ImagesExample\");\n$RefreshReg$(_c2, \"Element\");\n$RefreshReg$(_c3, \"ImageElement\");\n$RefreshReg$(_c4, \"InsertImageButton\");","map":{"version":3,"sources":["/Users/yonggu/WebstormProjects/gyedit/site/examples/images.tsx"],"names":["React","useState","useMemo","imageExtensions","isUrl","Transforms","createEditor","Slate","Editable","useEditor","useSelected","useFocused","withReact","withHistory","css","Button","Icon","Toolbar","ImagesExample","initialValue","value","setValue","editor","withImages","props","insertData","isVoid","element","type","data","text","getData","files","length","file","reader","FileReader","split","mime","addEventListener","url","result","insertImage","readAsDataURL","isImageUrl","image","children","insertNodes","Element","attributes","ImageElement","selected","focused","InsertImageButton","event","preventDefault","window","prompt","ext","URL","pathname","pop","includes"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react'\nimport imageExtensions from 'image-extensions'\nimport isUrl from 'is-url'\nimport { Node, Transforms, createEditor } from 'slate'\nimport {\n  Slate,\n  Editable,\n  useEditor,\n  useSelected,\n  useFocused,\n  withReact,\n} from 'slate-react'\nimport { withHistory } from 'slate-history'\nimport { css } from 'emotion'\n\nimport { Button, Icon, Toolbar } from '../components'\n\nconst ImagesExample = () => {\n  const [value, setValue] = useState<Node[]>(initialValue)\n  const editor = useMemo(\n    () => withImages(withHistory(withReact(createEditor()))),\n    []\n  )\n\n  return (\n    <Slate editor={editor} value={value} onChange={value => setValue(value)}>\n      <Toolbar>\n        <InsertImageButton />\n      </Toolbar>\n      <Editable\n        renderElement={props => <Element {...props} />}\n        placeholder=\"Enter some text...\"\n      />\n    </Slate>\n  )\n}\n\nconst withImages = editor => {\n  const { insertData, isVoid } = editor\n\n  editor.isVoid = element => {\n    return element.type === 'image' ? true : isVoid(element)\n  }\n\n  editor.insertData = data => {\n    const text = data.getData('text/plain')\n    const { files } = data\n\n    if (files && files.length > 0) {\n      for (const file of files) {\n        const reader = new FileReader()\n        const [mime] = file.type.split('/')\n\n        if (mime === 'image') {\n          reader.addEventListener('load', () => {\n            const url = reader.result\n            insertImage(editor, url)\n          })\n\n          reader.readAsDataURL(file)\n        }\n      }\n    } else if (isImageUrl(text)) {\n      insertImage(editor, text)\n    } else {\n      insertData(data)\n    }\n  }\n\n  return editor\n}\n\nconst insertImage = (editor, url) => {\n  const text = { text: '' }\n  const image = { type: 'image', url, children: [text] }\n  Transforms.insertNodes(editor, image)\n}\n\nconst Element = props => {\n  const { attributes, children, element } = props\n\n  switch (element.type) {\n    case 'image':\n      return <ImageElement {...props} />\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst ImageElement = ({ attributes, children, element }) => {\n  const selected = useSelected()\n  const focused = useFocused()\n  return (\n    <div {...attributes}>\n      <div contentEditable={false}>\n        <img\n          src={element.url}\n          className={css`\n            display: block;\n            max-width: 100%;\n            max-height: 20em;\n            box-shadow: ${selected && focused ? '0 0 0 3px #B4D5FF' : 'none'};\n          `}\n        />\n      </div>\n      {children}\n    </div>\n  )\n}\n\nconst InsertImageButton = () => {\n  const editor = useEditor()\n  return (\n    <Button\n      onMouseDown={event => {\n        event.preventDefault()\n        const url = window.prompt('Enter the URL of the image:')\n        if (!url) return\n        insertImage(editor, url)\n      }}\n    >\n      <Icon>image</Icon>\n    </Button>\n  )\n}\n\nconst isImageUrl = url => {\n  if (!url) return false\n  if (!isUrl(url)) return false\n  const ext = new URL(url).pathname.split('.').pop()\n  return imageExtensions.includes(ext)\n}\n\nconst initialValue = [\n  {\n    type: 'paragraph',\n    children: [\n      {\n        text:\n          'In addition to nodes that contain editable text, you can also create other types of nodes, like images or videos.',\n      },\n    ],\n  },\n  {\n    type: 'image',\n    url: 'https://source.unsplash.com/kFrdX5IeQzI',\n    children: [{ text: '' }],\n  },\n  {\n    type: 'paragraph',\n    children: [\n      {\n        text:\n          'This example shows images in action. It features two ways to add images. You can either add an image via the toolbar icon above, or if you want in on a little secret, copy an image URL to your keyboard and paste it anywhere in the editor!',\n      },\n    ],\n  },\n]\n\nexport default ImagesExample\n"]},"metadata":{},"sourceType":"module"}