{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yonggu/WebstormProjects/gyedit/site/examples/plaintext.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useMemo } from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { withHistory } from 'slate-history';\n\nvar PlainTextExample = function PlainTextExample() {\n  _s();\n\n  var _useState = useState(initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var editor = useMemo(function () {\n    return withHistory(withReact(createEditor()));\n  }, []);\n  return __jsx(Slate, {\n    editor: editor,\n    value: value,\n    onChange: function onChange(value) {\n      return setValue(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(Editable, {\n    placeholder: \"Enter some plain text...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(PlainTextExample, \"4ewp4wBHt4y6QUDh2ipfoCLaKxY=\");\n\n_c = PlainTextExample;\nvar initialValue = [{\n  children: [{\n    text: 'This is editable plain text, just like a <textarea>!'\n  }]\n}];\nexport default PlainTextExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlainTextExample\");","map":{"version":3,"sources":["/Users/yonggu/WebstormProjects/gyedit/site/examples/plaintext.tsx"],"names":["React","useState","useMemo","createEditor","Slate","Editable","withReact","withHistory","PlainTextExample","initialValue","value","setValue","editor","children","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAAeC,YAAf,QAAmC,OAAnC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,aAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAAA,kBACHP,QAAQ,CAASQ,YAAT,CADL;AAAA,MACtBC,KADsB;AAAA,MACfC,QADe;;AAE7B,MAAMC,MAAM,GAAGV,OAAO,CAAC;AAAA,WAAMK,WAAW,CAACD,SAAS,CAACH,YAAY,EAAb,CAAV,CAAjB;AAAA,GAAD,EAA+C,EAA/C,CAAtB;AACA,SACE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAES,MAAf;AAAuB,IAAA,KAAK,EAAEF,KAA9B;AAAqC,IAAA,QAAQ,EAAE,kBAAAA,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,WAAW,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CARD;;GAAMF,gB;;KAAAA,gB;AAUN,IAAMC,YAAY,GAAG,CACnB;AACEI,EAAAA,QAAQ,EAAE,CACR;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADQ;AADZ,CADmB,CAArB;AAQA,eAAeN,gBAAf","sourcesContent":["import React, { useState, useMemo } from 'react'\nimport { Node, createEditor } from 'slate'\nimport { Slate, Editable, withReact } from 'slate-react'\nimport { withHistory } from 'slate-history'\n\nconst PlainTextExample = () => {\n  const [value, setValue] = useState<Node[]>(initialValue)\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\n  return (\n    <Slate editor={editor} value={value} onChange={value => setValue(value)}>\n      <Editable placeholder=\"Enter some plain text...\" />\n    </Slate>\n  )\n}\n\nconst initialValue = [\n  {\n    children: [\n      { text: 'This is editable plain text, just like a <textarea>!' },\n    ],\n  },\n]\n\nexport default PlainTextExample\n"]},"metadata":{},"sourceType":"module"}