{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { cx, css } from 'emotion';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport dynamic from 'next/dynamic';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { Icon } from '../../components';\nimport CheckLists from '../../examples/check-lists';\nimport EditableVoids from '../../examples/editable-voids';\nimport Embeds from '../../examples/embeds';\nimport ForcedLayout from '../../examples/forced-layout';\nimport HoveringToolbar from '../../examples/hovering-toolbar';\nimport HugeDocument from '../../examples/huge-document';\nimport Images from '../../examples/images';\nimport Links from '../../examples/links';\nimport MarkdownPreview from '../../examples/markdown-preview';\nimport MarkdownShortcuts from '../../examples/markdown-shortcuts';\nimport Mentions from '../../examples/mentions';\nimport PasteHtml from '../../examples/paste-html';\nimport PlainText from '../../examples/plaintext';\nimport ReadOnly from '../../examples/read-only';\nimport RichText from '../../examples/richtext';\nimport SearchHighlighting from '../../examples/search-highlighting';\nimport CodeHighlighting from '../../examples/code-highlighting';\nimport Tables from '../../examples/tables'; // node\n\nimport { getAllExamples } from '../api';\nconst EXAMPLES = [['Checklists', CheckLists, 'check-lists'], ['Editable Voids', EditableVoids, 'editable-voids'], ['Embeds', Embeds, 'embeds'], ['Forced Layout', ForcedLayout, 'forced-layout'], ['Hovering Toolbar', HoveringToolbar, 'hovering-toolbar'], ['Huge Document', HugeDocument, 'huge-document'], ['Images', Images, 'images'], ['Links', Links, 'links'], ['Markdown Preview', MarkdownPreview, 'markdown-preview'], ['Markdown Shortcuts', MarkdownShortcuts, 'markdown-shortcuts'], ['Mentions', Mentions, 'mentions'], ['Paste HTML', PasteHtml, 'paste-html'], ['Plain Text', PlainText, 'plaintext'], ['Read-only', ReadOnly, 'read-only'], ['Rich Text', RichText, 'richtext'], ['Search Highlighting', SearchHighlighting, 'search-highlighting'], ['Code Highlighting', CodeHighlighting, 'code-highlighting'], ['Tables', Tables, 'tables']];\n\nconst Header = props => __jsx(\"div\", _extends({}, props, {\n  className: css`\n      align-items: center;\n      background: #000;\n      color: #aaa;\n      display: flex;\n      height: 42px;\n      position: relative;\n      z-index: 1; /* To appear above the underlay */\n    `\n}));\n\nconst Title = props => __jsx(\"span\", _extends({}, props, {\n  className: css`\n      margin-left: 1em;\n    `\n}));\n\nconst LinkList = props => __jsx(\"div\", _extends({}, props, {\n  className: css`\n      margin-left: auto;\n      margin-right: 1em;\n    `\n}));\n\nconst A = props => __jsx(\"a\", _extends({}, props, {\n  className: css`\n      margin-left: 1em;\n      color: #aaa;\n      text-decoration: none;\n\n      &:hover {\n        color: #fff;\n        text-decoration: underline;\n      }\n    `\n}));\n\nconst TabList = (_ref) => {\n  let {\n    isVisible\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"isVisible\"]);\n\n  return __jsx(\"div\", _extends({}, props, {\n    className: css`\n      background-color: #222;\n      display: flex;\n      flex-direction: column;\n      overflow: auto;\n      padding-top: 0.2em;\n      position: absolute;\n      transition: width 0.2s;\n      width: ${isVisible ? '200px' : '0'};\n      white-space: nowrap;\n      max-height: 70vh;\n      z-index: 1; /* To appear above the underlay */\n    `\n  }));\n};\n\nconst TabListUnderlay = (_ref2) => {\n  let {\n    isVisible\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"isVisible\"]);\n\n  return __jsx(\"div\", _extends({}, props, {\n    className: css`\n      background-color: rgba(200, 200, 200, 0.8);\n      display: ${isVisible ? 'block' : 'none'};\n      height: 100%;\n      top: 0;\n      position: fixed;\n      width: 100%;\n    `\n  }));\n};\n\nconst TabButton = props => __jsx(\"span\", _extends({}, props, {\n  className: css`\n      margin-left: 0.8em;\n\n      &:hover {\n        cursor: pointer;\n      }\n\n      .material-icons {\n        color: #aaa;\n        font-size: 24px;\n      }\n    `\n}));\n\nconst Tab = /*#__PURE__*/React.forwardRef((_ref3, ref) => {\n  let {\n    active,\n    href\n  } = _ref3,\n      props = _objectWithoutProperties(_ref3, [\"active\", \"href\"]);\n\n  return __jsx(\"a\", _extends({\n    ref: ref,\n    href: href\n  }, props, {\n    className: css`\n        display: inline-block;\n        margin-bottom: 0.2em;\n        padding: 0.2em 1em;\n        border-radius: 0.2em;\n        text-decoration: none;\n        color: ${active ? 'white' : '#777'};\n        background: ${active ? '#333' : 'transparent'};\n\n        &:hover {\n          background: #333;\n        }\n      `\n  }));\n});\n\nconst Wrapper = (_ref4) => {\n  let {\n    className\n  } = _ref4,\n      props = _objectWithoutProperties(_ref4, [\"className\"]);\n\n  return __jsx(\"div\", _extends({}, props, {\n    className: cx(className, css`\n        max-width: 42em;\n        margin: 20px auto;\n        padding: 20px;\n      `)\n  }));\n};\n\nconst ExampleHeader = props => __jsx(\"div\", _extends({}, props, {\n  className: css`\n      align-items: center;\n      background-color: #555;\n      color: #ddd;\n      display: flex;\n      height: 42px;\n      position: relative;\n      z-index: 1; /* To appear above the underlay */\n    `\n}));\n\nconst ExampleTitle = props => __jsx(\"span\", _extends({}, props, {\n  className: css`\n      margin-left: 1em;\n    `\n}));\n\nconst ExampleContent = props => __jsx(Wrapper, _extends({}, props, {\n  className: css`\n      background: #fff;\n    `\n}));\n\nconst Warning = props => __jsx(Wrapper, _extends({}, props, {\n  className: css`\n      background: #fffae0;\n\n      & > pre {\n        background: #fbf1bd;\n        white-space: pre;\n        overflow-x: scroll;\n        margin-bottom: 0;\n      }\n    `\n}));\n\nfunction ErrorFallback({\n  error,\n  resetErrorBoundary\n}) {\n  return __jsx(\"div\", {\n    role: \"alert\"\n  }, __jsx(\"p\", null, \"Something went wrong:\"), __jsx(\"pre\", null, error.message), __jsx(\"button\", {\n    onClick: resetErrorBoundary\n  }, \"Try again\"));\n}\n\nconst ExamplePage = ({\n  example\n}) => {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: stacktrace,\n    1: setStacktrace\n  } = useState();\n  const {\n    0: showTabs,\n    1: setShowTabs\n  } = useState();\n  const EXAMPLE = EXAMPLES.find(e => e[2] === example);\n  const [name, Component, path] = EXAMPLE;\n  return __jsx(ErrorBoundary, {\n    FallbackComponent: ErrorFallback,\n    onReset: () => {// reset the state of your app so the error doesn't happen again\n    }\n  }, __jsx(\"div\", null, __jsx(Head, null, __jsx(\"title\", null, \"Slate Examples\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"/index.css\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/css?family=Roboto:400,400i,700,700i&subset=latin-ext\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\"\n  })), __jsx(Header, null, __jsx(Title, null, \"Slate Examples\"), __jsx(LinkList, null, __jsx(A, {\n    href: \"https://github.com/ianstormtaylor/slate\"\n  }, \"GitHub\"), __jsx(A, {\n    href: \"https://docs.slatejs.org/\"\n  }, \"Docs\"))), __jsx(ExampleHeader, null, __jsx(TabButton, {\n    onClick: e => {\n      e.stopPropagation();\n      setShowTabs(!showTabs);\n    }\n  }, __jsx(Icon, null, \"menu\")), __jsx(ExampleTitle, null, name, __jsx(A, {\n    href: `https://github.com/ianstormtaylor/slate/blob/master/site/examples/${path}.tsx`\n  }, \"(View Source)\"))), __jsx(TabList, {\n    isVisible: showTabs\n  }, EXAMPLES.map(([n,, p]) => __jsx(Link, {\n    key: p,\n    href: \"/examples/[example]\",\n    as: `/examples/${p}`,\n    passHref: true\n  }, __jsx(Tab, {\n    onClick: () => setShowTabs(false)\n  }, n)))), error ? __jsx(Warning, null, __jsx(\"p\", null, \"An error was thrown by one of the example's React components!\"), __jsx(\"pre\", null, __jsx(\"code\", null, error.stack, '\\n', stacktrace))) : __jsx(ExampleContent, null, __jsx(Component, null)), __jsx(TabListUnderlay, {\n    isVisible: showTabs,\n    onClick: () => setShowTabs(false)\n  })));\n}; // Disable SSR because it results in a double rendering which makes debugging\n// examples more challenging. No idea how any of this works.\n\n\nconst NoSsrExamplePage = dynamic(() => Promise.resolve(ExamplePage), {\n  ssr: false\n});\nexport async function getStaticPaths() {\n  const paths = getAllExamples();\n  return {\n    paths: paths.map(path => ({\n      params: {\n        example: path\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  return {\n    props: {\n      example: params.example\n    }\n  };\n}\nexport default NoSsrExamplePage;","map":null,"metadata":{},"sourceType":"module"}