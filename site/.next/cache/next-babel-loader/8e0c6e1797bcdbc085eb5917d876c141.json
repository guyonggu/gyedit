{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useMemo, useCallback } from 'react';\nimport faker from 'faker';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nconst HEADINGS = 100;\nconst PARAGRAPHS = 7;\nconst initialValue = [];\n\nfor (let h = 0; h < HEADINGS; h++) {\n  initialValue.push({\n    type: 'heading',\n    children: [{\n      text: faker.lorem.sentence()\n    }]\n  });\n\n  for (let p = 0; p < PARAGRAPHS; p++) {\n    initialValue.push({\n      children: [{\n        text: faker.lorem.paragraph()\n      }]\n    });\n  }\n}\n\nconst HugeDocumentExample = () => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(initialValue);\n  const renderElement = useCallback(props => __jsx(Element, props), []);\n  const editor = useMemo(() => withReact(createEditor()), []);\n  return __jsx(Slate, {\n    editor: editor,\n    value: value,\n    onChange: value => setValue(value)\n  }, __jsx(Editable, {\n    renderElement: renderElement,\n    spellCheck: true,\n    autoFocus: true\n  }));\n};\n\nconst Element = ({\n  attributes,\n  children,\n  element\n}) => {\n  switch (element.type) {\n    case 'heading':\n      return __jsx(\"h1\", attributes, children);\n\n    default:\n      return __jsx(\"p\", attributes, children);\n  }\n};\n\nexport default HugeDocumentExample;","map":null,"metadata":{},"sourceType":"module"}