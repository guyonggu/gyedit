{"ast":null,"code":"var _jsxFileName = \"/Users/yonggu/WebstormProjects/slate/site/components.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { cx, css } from 'emotion';\nexport const Button = React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    active,\n    reversed\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"active\", \"reversed\"]);\n\n  return __jsx(\"span\", _extends({}, props, {\n    ref: ref,\n    className: cx(className, css`\n          cursor: pointer;\n          color: ${reversed ? active ? 'white' : '#aaa' : active ? 'black' : '#ccc'};\n        `),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }));\n});\nexport const EditorValue = React.forwardRef((_ref2, ref) => {\n  let {\n    className,\n    value\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"className\", \"value\"]);\n\n  const textLines = value.document.nodes.map(node => node.text).toArray().join('\\n');\n  return __jsx(\"div\", _extends({\n    ref: ref\n  }, props, {\n    className: cx(className, css`\n            margin: 30px -20px 0;\n          `),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: css`\n            font-size: 14px;\n            padding: 5px 20px;\n            color: #404040;\n            border-top: 2px solid #eeeeee;\n            background: #f8f8f8;\n          `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Slate's value as text\"), __jsx(\"div\", {\n    className: css`\n            color: #404040;\n            font: 12px monospace;\n            white-space: pre-wrap;\n            padding: 10px 20px;\n            div {\n              margin: 0 0 0.5em;\n            }\n          `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, textLines));\n});\nexport const Icon = React.forwardRef((_ref3, ref) => {\n  let {\n    className\n  } = _ref3,\n      props = _objectWithoutProperties(_ref3, [\"className\"]);\n\n  return __jsx(\"span\", _extends({}, props, {\n    ref: ref,\n    className: cx('material-icons', className, css`\n          font-size: 18px;\n          vertical-align: text-bottom;\n        `),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }));\n});\nexport const Instruction = React.forwardRef((_ref4, ref) => {\n  let {\n    className\n  } = _ref4,\n      props = _objectWithoutProperties(_ref4, [\"className\"]);\n\n  return __jsx(\"div\", _extends({}, props, {\n    ref: ref,\n    className: cx(className, css`\n          white-space: pre-wrap;\n          margin: 0 -20px 10px;\n          padding: 10px 20px;\n          font-size: 14px;\n          background: #f8f8e8;\n        `),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }));\n});\nexport const Menu = React.forwardRef((_ref5, ref) => {\n  let {\n    className\n  } = _ref5,\n      props = _objectWithoutProperties(_ref5, [\"className\"]);\n\n  return __jsx(\"div\", _extends({}, props, {\n    ref: ref,\n    className: cx(className, css`\n          & > * {\n            display: inline-block;\n          }\n\n          & > * + * {\n            margin-left: 15px;\n          }\n        `),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }));\n});\nexport const Portal = ({\n  children\n}) => {\n  return ReactDOM.createPortal(children, document.body);\n};\nexport const Toolbar = React.forwardRef((_ref6, ref) => {\n  let {\n    className\n  } = _ref6,\n      props = _objectWithoutProperties(_ref6, [\"className\"]);\n\n  return __jsx(Menu, _extends({}, props, {\n    ref: ref,\n    className: cx(className, css`\n          position: relative;\n          padding: 1px 18px 17px;\n          margin: 0 -20px;\n          border-bottom: 2px solid #eee;\n          margin-bottom: 20px;\n        `),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/yonggu/WebstormProjects/slate/site/components.tsx"],"names":["React","ReactDOM","cx","css","Button","forwardRef","ref","className","active","reversed","props","EditorValue","value","textLines","document","nodes","map","node","text","toArray","join","Icon","Instruction","Menu","Portal","children","createPortal","body","Toolbar"],"mappings":"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","sourcesContent":["import React, { Ref, PropsWithChildren } from 'react'\nimport ReactDOM from 'react-dom'\nimport { cx, css } from 'emotion'\n\ninterface BaseProps {\n  className: string\n  [key: string]: unknown\n}\ntype OrNull<T> = T | null\n\nexport const Button = React.forwardRef(\n  (\n    {\n      className,\n      active,\n      reversed,\n      ...props\n    }: PropsWithChildren<\n      {\n        active: boolean\n        reversed: boolean\n      } & BaseProps\n    >,\n    ref: Ref<OrNull<HTMLSpanElement>>\n  ) => (\n    <span\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        css`\n          cursor: pointer;\n          color: ${reversed\n            ? active\n              ? 'white'\n              : '#aaa'\n            : active\n            ? 'black'\n            : '#ccc'};\n        `\n      )}\n    />\n  )\n)\n\nexport const EditorValue = React.forwardRef(\n  (\n    {\n      className,\n      value,\n      ...props\n    }: PropsWithChildren<\n      {\n        value: any\n      } & BaseProps\n    >,\n    ref: Ref<OrNull<null>>\n  ) => {\n    const textLines = value.document.nodes\n      .map(node => node.text)\n      .toArray()\n      .join('\\n')\n    return (\n      <div\n        ref={ref}\n        {...props}\n        className={cx(\n          className,\n          css`\n            margin: 30px -20px 0;\n          `\n        )}\n      >\n        <div\n          className={css`\n            font-size: 14px;\n            padding: 5px 20px;\n            color: #404040;\n            border-top: 2px solid #eeeeee;\n            background: #f8f8f8;\n          `}\n        >\n          Slate's value as text\n        </div>\n        <div\n          className={css`\n            color: #404040;\n            font: 12px monospace;\n            white-space: pre-wrap;\n            padding: 10px 20px;\n            div {\n              margin: 0 0 0.5em;\n            }\n          `}\n        >\n          {textLines}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport const Icon = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLSpanElement>>\n  ) => (\n    <span\n      {...props}\n      ref={ref}\n      className={cx(\n        'material-icons',\n        className,\n        css`\n          font-size: 18px;\n          vertical-align: text-bottom;\n        `\n      )}\n    />\n  )\n)\n\nexport const Instruction = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <div\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        css`\n          white-space: pre-wrap;\n          margin: 0 -20px 10px;\n          padding: 10px 20px;\n          font-size: 14px;\n          background: #f8f8e8;\n        `\n      )}\n    />\n  )\n)\n\nexport const Menu = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <div\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        css`\n          & > * {\n            display: inline-block;\n          }\n\n          & > * + * {\n            margin-left: 15px;\n          }\n        `\n      )}\n    />\n  )\n)\n\nexport const Portal = ({ children }) => {\n  return ReactDOM.createPortal(children, document.body)\n}\n\nexport const Toolbar = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <Menu\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        css`\n          position: relative;\n          padding: 1px 18px 17px;\n          margin: 0 -20px;\n          border-bottom: 2px solid #eee;\n          margin-bottom: 20px;\n        `\n      )}\n    />\n  )\n)\n"]},"metadata":{},"sourceType":"module"}